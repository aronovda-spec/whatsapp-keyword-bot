/**
 * Migration Script: Add Admin User to Supabase
 * 
 * Usage: node migrate-admin.js
 */

require('dotenv').config();
const SupabaseManager = require('./src/supabase');

async function migrateAdmin() {
    console.log('üîÑ Starting admin migration to Supabase...\n');

    // Check if Supabase is configured
    if (!process.env.SUPABASE_URL || !process.env.SUPABASE_KEY) {
        console.error('‚ùå Supabase not configured in .env file!');
        console.log('Please add SUPABASE_URL and SUPABASE_KEY to your .env file.');
        process.exit(1);
    }

    // Initialize Supabase
    const supabase = new SupabaseManager();
    
    if (!supabase.isEnabled()) {
        console.error('‚ùå Failed to connect to Supabase!');
        process.exit(1);
    }

    console.log('‚úÖ Connected to Supabase\n');

    // Your admin user ID (from telegram-auth.js)
    const adminUserId = '1022850808';

    console.log(`üëë Adding admin user: ${adminUserId}\n`);

    // Add as admin
    const success = await supabase.promoteToAdmin(adminUserId);
    
    if (success) {
        console.log('‚úÖ Admin user added successfully!\n');
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
        console.log('üìä Summary:');
        console.log(`   üëë User ID: ${adminUserId}`);
        console.log(`   ‚úÖ Role: Admin`);
        console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n');
        console.log('üí° Your admin status is now in Supabase database!');
        console.log('üîç Verify in Supabase Dashboard:');
        console.log('   1. Go to Table Editor');
        console.log('   2. Select "authorized_users" table');
        console.log('   3. You should see your user with is_admin = true!\n');
    } else {
        console.error('‚ùå Failed to add admin user!');
        process.exit(1);
    }

    console.log('‚ú® Migration complete!');
}

// Run migration
migrateAdmin().catch(error => {
    console.error('\n‚ùå Migration failed:', error.message);
    console.error(error);
    process.exit(1);
});

